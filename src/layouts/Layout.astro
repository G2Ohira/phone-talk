---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="ja">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="PhoneTalk" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script>
			(function (d) {
				var config = {
						kitId: "qwy2hnr",
						scriptTimeout: 3000,
						async: true,
					},
					h = d.documentElement,
					t = setTimeout(function () {
						h.className =
							h.className.replace(/\bwf-loading\b/g, "") +
							" wf-inactive";
					}, config.scriptTimeout),
					tk = d.createElement("script"),
					f = false,
					s = d.getElementsByTagName("script")[0],
					a;
				h.className += " wf-loading";
				tk.src = "https://use.typekit.net/" + config.kitId + ".js";
				tk.async = true;
				tk.onload = tk.onreadystatechange = function () {
					a = this.readyState;
					if (f || (a && a != "complete" && a != "loaded")) return;
					f = true;
					clearTimeout(t);
					try {
						Typekit.load(config);
					} catch (e) {}
				};
				s.parentNode.insertBefore(tk, s);
			})(document);
		</script>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	html {
		@apply bg-light-white font-yugothic;
	}
</style>
